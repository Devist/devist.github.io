<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>오동환</title>
  
  <subtitle>Donghwan&#39;s Something</subtitle>
  <link href="/feed.xml" rel="self"/>
  
  <link href="https://devist.github.io/"/>
  <updated>2019-01-16T11:52:37.577Z</updated>
  <id>https://devist.github.io/</id>
  
  <author>
    <name>DongHwan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JSDoc 설치 및 사용방법 | JavaDoc과 비슷한 JSDoc으로 자바스크립트 문서화</title>
    <link href="https://devist.github.io/2019/01/16/how-to-use-jsdoc/"/>
    <id>https://devist.github.io/2019/01/16/how-to-use-jsdoc/</id>
    <published>2019-01-16T11:32:34.000Z</published>
    <updated>2019-01-16T11:52:37.577Z</updated>
    
    <content type="html"><![CDATA[<p>*맥 OS에서 작성했습니다.</p><p>JavaScript에서 JAVADOC 처럼 주석을 문서를 뽑아주는 JSDOC 이라는 플러그인이 있습니다.</p><p>이에 대해 구체적인 사용방법이 정리되어 있는 블로그가 없는 것 같아 정리해 봅니다.</p><p><strong><a href="http://usejsdoc.org/" target="_blank" rel="noopener">JSDOC 사용법이 정리되어 있는 사이트</a>&lt;클릭&gt;</strong></p><p><strong><a href="https://github.com/jsdoc3/jsdoc" target="_blank" rel="noopener">JSDOC Github 사이트</a>&lt;클릭&gt;</strong></p><p>JSDOC은 다양한 템플릿으로 문서를 만들 수 있습니다.</p><p>저는 docdash가 자주 사용된다고 하여 이것 또한 설치하여 사용할 겁니다.</p><p><img src="https://t1.daumcdn.net/cfile/tistory/995C3E485A4C332102" alt="img"></p><p>다음은 설치 및 사용 방법입니다.</p><h4 id="1-먼저-터미널을-열고-gt-npm-install-jsdoc"><a href="#1-먼저-터미널을-열고-gt-npm-install-jsdoc" class="headerlink" title="1. 먼저 터미널을 열고, &gt; npm install jsdoc"></a>1. 먼저 터미널을 열고, &gt; npm install jsdoc</h4><p><img src="https://t1.daumcdn.net/cfile/tistory/990BCC365A4C31FE09" alt="img"></p><h4 id="2-jsdoc-이-설치된-폴더로-이동하여-gt-npm-install-docdash"><a href="#2-jsdoc-이-설치된-폴더로-이동하여-gt-npm-install-docdash" class="headerlink" title="2. jsdoc 이 설치된 폴더로 이동하여, &gt; npm install docdash"></a>2. jsdoc 이 설치된 폴더로 이동하여, &gt; npm install docdash</h4><p><img src="https://t1.daumcdn.net/cfile/tistory/99A3CE395A4C325E47" alt="img"></p><h4 id="3-하나의-파일-문서화해보기"><a href="#3-하나의-파일-문서화해보기" class="headerlink" title="3. 하나의 파일 문서화해보기"></a>3. 하나의 파일 문서화해보기</h4><p>보통 document를 만들 때, 하나의 파일만 문서화하지 않습니다. 그러나 예제로, 하나의 JavaScript 파일만 문서화 해보겠습니다. 먼저 javadoc 처럼 문서를 뽑아내기 위해서 주석과 규칙을 이용해서 자바스크립트 파일에 문서를 추가해야겠죠?</p><p>이 과정은 좀 더 아래에서 나중에 설명하겠습니다.</p><ul><li><p>먼저 문서화할 자바스크립트 파일에 JSDoc 문법으로 주석을 작성합니다</p></li><li><p>javacript 파일이 있는 경로로 이동 후 다음 명령어를 사용하여 문서화 합니다. </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> jsdoc [javascript] -t [docdash 경로]</span><br></pre></td></tr></table></figure><p>여기서 -t는 템플릿을 사용하겠다는 것이며, docdash 경로는 jsdoc이 설치되어 있는 경로내에 존재합니다. 아래 그림 예제를 참고하세요.<img src="https://t1.daumcdn.net/cfile/tistory/993FCB475A4C36FE11" alt="img"></p></li><li><p>jsdoc을 실행한 해당 경로에 out 폴더가 생겼을 겁니다. 여기서 index.html 을 열어보면 다음과 같이 html 문서를 확인할 수 있습니다.<img src="https://t1.daumcdn.net/cfile/tistory/99229C4A5A4C375F15" alt="img"></p></li></ul><ul><li><p>그러나 자바스크립트 파일의 주석만 덩하니 문서화하면, 문서의 HOME 페이지가 허전할 겁니다. 이 부분은 마크다운 문서인 README.md 를 작성하여 채워넣습니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> jsdoc [javascript 파일] [markdown 파일]</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://t1.daumcdn.net/cfile/tistory/99D449375A4C392929" alt="img"></p><h4 id="4-Javascript-프로젝트-문서화해보기"><a href="#4-Javascript-프로젝트-문서화해보기" class="headerlink" title="4. Javascript 프로젝트 문서화해보기"></a>4. Javascript 프로젝트 문서화해보기</h4><p>아까 말씀드린 것처럼 보통 하나의 파일만을 문서화하지 않죠. 폴더내 모든 javascript 파일을 한 번에 문서화할 수도 있습니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> jsdoc [폴더]  -r</span><br></pre></td></tr></table></figure><h4 id="5-Javascript-프로젝트-문서화-커스터마이징"><a href="#5-Javascript-프로젝트-문서화-커스터마이징" class="headerlink" title="5. Javascript 프로젝트 문서화 커스터마이징"></a>5. Javascript 프로젝트 문서화 커스터마이징</h4><ul><li>README.md 파일을 HOME 으로 사용하고, </li><li><p>동시에 폴더 내 모든 자바스크립트 파일을 문서화하며, </p></li><li><p>이 때 docdash 템플릿까지 이용하는 방법</p></li></ul><p>은 다음과 같습니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> jsdoc [폴더] [markdown 파일] -r -t [docdash 경로]</span><br></pre></td></tr></table></figure><p><img src="https://t1.daumcdn.net/cfile/tistory/9909A93A5A4C3A8326" alt="img"></p><p>지금까지 jsdoc 이용방법을 알아보았습니다. </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;*맥 OS에서 작성했습니다.&lt;/p&gt;
&lt;p&gt;JavaScript에서 JAVADOC 처럼 주석을 문서를 뽑아주는 JSDOC 이라는 플러그인이 있습니다.&lt;/p&gt;
&lt;p&gt;이에 대해 구체적인 사용방법이 정리되어 있는 블로그가 없는 것 같아 정리해 봅니다.&lt;/
      
    
    </summary>
    
      <category term="Frontend" scheme="https://devist.github.io/categories/frontend/"/>
    
      <category term="Etc" scheme="https://devist.github.io/categories/frontend/etc/"/>
    
    
      <category term="javascript" scheme="https://devist.github.io/tags/javascript/"/>
    
      <category term="jsdoc" scheme="https://devist.github.io/tags/jsdoc/"/>
    
      <category term="esdoc" scheme="https://devist.github.io/tags/esdoc/"/>
    
  </entry>
  
  <entry>
    <title>ESDoc 설치 및 사용방법 | ES6 자바스크립트 문서화하기</title>
    <link href="https://devist.github.io/2019/01/15/how-to-use-esdoc/"/>
    <id>https://devist.github.io/2019/01/15/how-to-use-esdoc/</id>
    <published>2019-01-15T14:34:18.000Z</published>
    <updated>2019-01-16T11:37:42.244Z</updated>
    
    <content type="html"><![CDATA[<p>esdoc은 JavaScript 용 문서 제네레이터, 특히 es6에 특화된 documentation generator입니다. 비슷하게 JavaScript의 주석을 문서로 만들어주는 것이로, JSdoc 도 있습니다.</p><p>현재 진행하고 있는 es6로 개발 중인 자바스크립트 프로젝트에는, esdoc을 설치하고 사용하여  자바스크립트 파일을 주석으로 문서화해보려고 합니다.</p><p>적용하려는 프로젝트는 다음과 같이 구성되어 있습니다.</p><ul><li>Webpack</li><li>Javascript (es6)</li></ul><h2 id="Step1-esdoc-설치"><a href="#Step1-esdoc-설치" class="headerlink" title="Step1. esdoc 설치"></a>Step1. esdoc 설치</h2><p>설치는 간단합니다. <a href="https://esdoc.org/" target="_blank" rel="noopener">공식 문서</a>에도 잘 나와 있습니다. 아래는 간단히 번역한 것입니다.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># project directory 로 이동하세요</span></span><br><span class="line">cd your-project/</span><br><span class="line"></span><br><span class="line"><span class="comment"># ESDOC 과 표준 플러그인을 설치하세요.</span></span><br><span class="line">npm install esdoc esdoc-standard-plugin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 다음과 같이 configuration 파일을 작성하세요.</span></span><br><span class="line">echo <span class="string">'&#123;</span></span><br><span class="line"><span class="string">  "source": "./src",</span></span><br><span class="line"><span class="string">  "destination": "./docs",</span></span><br><span class="line"><span class="string">  "plugins": [&#123;"name": "esdoc-standard-plugin"&#125;]</span></span><br><span class="line"><span class="string">&#125;'</span> &gt; .esdoc.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># run ESDoc</span></span><br><span class="line">./node_modules/.bin/esdoc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 문서를 확인해 보세요.</span></span><br><span class="line">open ./docs/index.html</span><br></pre></td></tr></table></figure><p>다음과 같이 적용된 모습이 나오면 됩니다.</p><p><img src="https://esdoc.org/manual/asset/image/top.png" alt=""></p><h2 id="Step2-테마-적용"><a href="#Step2-테마-적용" class="headerlink" title="Step2. 테마 적용"></a>Step2. 테마 적용</h2><p>esdoc은 아직까지는 jsdoc 처럼 테마가 많지 않은 것 같습니다.  저는 <strong><a href="https://github.com/sinnerschrader/esdoc-custom-theme" target="_blank" rel="noopener">esdoc-custom-theme</a></strong> 의 Light mode를 적용하려 합니다.</p><p><strong>Light mode</strong><img src="https://camo.githubusercontent.com/462d1fbda7787d88b9d9454778c01c53a0a9941f/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e6e657273636872616465722f6573646f632d637573746f6d2d7468656d652f6d61737465722f2e6769746875622f696d616765732f6c696768742d6d6f64652e706e67" alt=""></p><p><strong>적용 방법은 다음과 같습니다.</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> project directory 로 이동하세요</span><br><span class="line">cd your-project/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> ESDOC 과 표준 플러그인을 설치하세요. (esdoc)은 Step1을 하지 않았을 때 입력하세요.</span><br><span class="line">npm install (esdoc) esdoc-publish-html-plugin esdoc-custom-theme -D --save</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 다음과 같이 configuration 파일을 작성하세요.</span><br><span class="line"><span class="meta">#</span> Step1와 비교해보면, plugins 가 바뀌었습니다.</span><br><span class="line">echo '&#123;</span><br><span class="line">  "source": "./src",</span><br><span class="line">  "destination": "./docs",</span><br><span class="line">  "plugins": [</span><br><span class="line">    &#123;</span><br><span class="line">      "name": "esdoc-publish-html-plugin",</span><br><span class="line">      "option": &#123;</span><br><span class="line">        "template": "./node_modules/esdoc-custom-theme/template"</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;' &gt; .esdoc.json</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> run ESDoc</span><br><span class="line">./node_modules/.bin/esdoc</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 문서를 확인해 보세요.</span><br><span class="line">open ./docs/index.html</span><br></pre></td></tr></table></figure><p>다음과 같이 비슷한 형태로 나온다면, 테마가 정상적으로 적용된 겁니다.</p><p><img src="https://camo.githubusercontent.com/a93d7c2c8b6752f9b49a7b68a3f4791e21b5887d/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e6e657273636872616465722f6573646f632d637573746f6d2d7468656d652f6d61737465722f2e6769746875622f696d616765732f6461726b2d6d6f64652e706e67" alt=""></p><h2 id="Step3-커스터마이징"><a href="#Step3-커스터마이징" class="headerlink" title="Step3. 커스터마이징"></a>Step3. 커스터마이징</h2><ul><li>문서 저작권 및 Repository 연결</li><li>마크다운으로 좀 더 상세한 문서 작성</li><li>테마 수정</li></ul><p>을 해보려고 합니다.</p><h3 id="추가-플러그인-설치"><a href="#추가-플러그인-설치" class="headerlink" title="추가 플러그인 설치"></a>추가 플러그인 설치</h3><p>커스터마이징을 위해, 먼저 다음의 플러그인을 설치합니다.</p><ul><li><a href="https://yarnpkg.com/en/package/esdoc-brand-plugin" target="_blank" rel="noopener">esdoc-brand-plugin</a></li><li><a href="https://yarnpkg.com/en/package/esdoc-inject-style-plugin" target="_blank" rel="noopener">esdoc-inject-style-plugin</a></li><li><a href="https://yarnpkg.com/en/package/esdoc-standard-plugin" target="_blank" rel="noopener">esdoc-standard-plugin</a></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> project directory 로 이동하세요</span><br><span class="line">cd your-project/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 커스터마이징을 위한 추가 플러그인을 설치합니다</span><br><span class="line">npm install esdoc-brand-plugin esdoc-inject-style-plugin esdoc-standard-plugin -D --save</span><br></pre></td></tr></table></figure><h3 id="Configuration-파일-수정"><a href="#Configuration-파일-수정" class="headerlink" title="Configuration 파일 수정"></a>Configuration 파일 수정</h3><p>아래를 따라하면, </p><ul><li><strong>esdoc-brand-plugin</strong> 에서 자신의 git 주소와 문서 타이틀 등을 수정할 수 있습니다.</li><li><strong>esdoc-inject-style-plugin</strong> 에서 문서의 스타일(테마)를 수정할 수 있습니다.<ul><li><em>추가로 cofiguration 파일에 명시된 custom-styles.css 를 생성해야 동작합니다</em></li></ul></li><li><strong>esdoc-standard-plugin</strong> 에서 마크다운 문서를 추가할 수 있습니다.<ul><li><em>추가로 cofiguration 파일에 명시된 마크다운 문서를 생성해야 동작합니다</em></li></ul></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> project directory 로 이동하세요</span><br><span class="line">cd your-project/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> vi 편집기로 Step1,Step2에서 수정했던 .esdoc.json 파일을 열어, plugin 쪽을 다시 한 번 수정합니다.</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  "plugins": [</span><br><span class="line">    &#123;</span><br><span class="line">      "name": "esdoc-brand-plugin",</span><br><span class="line">      "option": &#123;</span><br><span class="line">        "title": "esdoc-custom-theme",</span><br><span class="line">        "description": "A customizable theme for esdoc",</span><br><span class="line">        "repository": "https://github.com/sinnerschrader/esdoc-custom-theme",</span><br><span class="line">        "site": "sinnerschrader.github.io/esdoc-custom-theme",</span><br><span class="line">        "author": "https://github.com/pixelass"</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      "name": "esdoc-inject-style-plugin",</span><br><span class="line">      "option": &#123;</span><br><span class="line">      "enable": true,</span><br><span class="line">        "styles": [</span><br><span class="line">          "./custom-styles.css"</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      "name": "esdoc-publish-html-plugin",</span><br><span class="line">      "option": &#123;</span><br><span class="line">        "template": "./node_modules/esdoc-custom-theme/template"</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      "name": "esdoc-standard-plugin",</span><br><span class="line">      "option": &#123;</span><br><span class="line">        "coverage": &#123;</span><br><span class="line">          "enable": true</span><br><span class="line">        &#125;,</span><br><span class="line">        "accessor": &#123;</span><br><span class="line">          "access": ["public"],</span><br><span class="line">          "autoPrivate": true</span><br><span class="line">        &#125;,</span><br><span class="line">        "manual": &#123;</span><br><span class="line">          "index": "./manual/index.md",</span><br><span class="line">          "globalIndex": true,</span><br><span class="line">          "asset": "./manual/assets",</span><br><span class="line">          "files": [</span><br><span class="line">            "./manual/installation.md"</span><br><span class="line">            "./manual/usage.md"</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="custom-styles-css-파일-수정"><a href="#custom-styles-css-파일-수정" class="headerlink" title="custom-styles.css 파일 수정"></a>custom-styles.css 파일 수정</h3><p>위의 configuration 파일에서 esdoc 문서의 테마 커스텀을 위해,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&quot;name&quot;: &quot;esdoc-inject-style-plugin&quot;,</span><br><span class="line">      &quot;option&quot;: &#123;</span><br><span class="line">      &quot;enable&quot;: true,</span><br><span class="line">        &quot;styles&quot;: [</span><br><span class="line">          &quot;./custom-styles.css&quot;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>와 같이 수정했기 때문에, 현재는 존재하지 않는 custom-styels.css 파일을 만들어줘야 합니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> project directory 로 이동하세요</span><br><span class="line">cd your-project/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> vi 편집기로 custom-styles.css 파일을 생성합니다.</span><br><span class="line">vi custom-styles.css</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 해당 파일에 다음을 기입합니다.</span><br><span class="line">:root.light &#123;</span><br><span class="line">  --main-background: #fff;</span><br><span class="line">  --main-color: #000;</span><br><span class="line">  --main-border-color: #c9d0d5;</span><br><span class="line">  --main-link-color: #3300d1;</span><br><span class="line">  --main-focus-color: #7588fb;</span><br><span class="line"></span><br><span class="line">  --main-header-background: #3300d1;</span><br><span class="line">  --main-header-color: #fff;</span><br><span class="line">  --main-header-border-color: #010049;</span><br><span class="line">  --main-header-link-hover-shade: rgba(255, 255, 255, 0.1);</span><br><span class="line">  --main-header-link-active-shade: rgba(255, 255, 255, 0.2);</span><br><span class="line">  --main-header-shadow: 0 0.175rem 0.25rem rgba(0, 0, 0, 0.35), 0 0.25rem 0.5rem rgba(0, 0, 0, 0.65);</span><br><span class="line"></span><br><span class="line">  --left-sidebar-background: #f2f5f9;</span><br><span class="line">  --left-sidebar-background-active: #acb4b7;</span><br><span class="line">  --left-sidebar-color-active: #000;</span><br><span class="line">  --left-sidebar-color: #000;</span><br><span class="line">  --left-sidebar-border-color: #c9d0d5;</span><br><span class="line">  --left-sidebar-indent-background: none;</span><br><span class="line">  --left-sidebar-shadow: none;</span><br><span class="line"></span><br><span class="line">  --right-sidebar-background: #212429;</span><br><span class="line">  --right-sidebar-background-active: #16181f;</span><br><span class="line">  --right-sidebar-color-active: #fff;</span><br><span class="line">  --right-sidebar-color: #fff;</span><br><span class="line">  --right-sidebar-border-color: #2d3038;</span><br><span class="line">  --right-sidebar-indent-background: none;</span><br><span class="line">  --right-sidebar-shadow: -0.125rem 0 0.25rem rgba(0, 0, 0, 0.25), -0.175rem 0 0.35rem rgba(0, 0, 0, 0.45);</span><br><span class="line"></span><br><span class="line">  --card-link-hover-shade: rgba(0, 0, 0, 0.1);</span><br><span class="line"></span><br><span class="line">  --search-separator-background: #3300d1;</span><br><span class="line">  --search-separator-color: #fff;</span><br><span class="line">  --search-result-background: #f2f5f9;</span><br><span class="line">  --search-result-color: #000;</span><br><span class="line">  --search-result-border-color: #c9d0d5;</span><br><span class="line">  --search-result-selected-background: #c9d0d5;</span><br><span class="line">  --search-result-selected-color: #000;</span><br><span class="line">  --search-result-shadow: 0 0.25rem 0.25rem rgba(0, 0, 0, 0.35), 0 0.5rem 0.5rem rgba(0, 0, 0, 0.65);</span><br><span class="line">  --search-result-hover-shade: rgba(0, 0, 0, 0.1);</span><br><span class="line">  --search-result-focus-color: #7588fb;</span><br><span class="line"></span><br><span class="line">  --main-code-background: #c9d0d5;</span><br><span class="line">  --main-code-color: #0d6663;</span><br><span class="line">  --main-code-border-color: #c9d0d5;</span><br><span class="line"></span><br><span class="line">  --pretty-code-error-background: #7f012a;</span><br><span class="line">  --pretty-code-error-color: #fff;</span><br><span class="line"></span><br><span class="line">  --kind-background: #16181f;</span><br><span class="line">  --kind-color: #696e76;</span><br><span class="line"></span><br><span class="line">  --kind-function-background: hsl(0, 80%, 70%);</span><br><span class="line">  --kind-function-color: hsl(0, 90%, 20%);</span><br><span class="line"></span><br><span class="line">  --kind-class-background: hsl(30, 80%, 70%);</span><br><span class="line">  --kind-class-color: hsl(30, 90%, 20%);</span><br><span class="line"></span><br><span class="line">  --kind-variable-background: hsl(60, 80%, 70%);</span><br><span class="line">  --kind-variable-color: hsl(60, 90%, 20%);</span><br><span class="line"></span><br><span class="line">  --table-color: #000;</span><br><span class="line">  --table-background: #f2f5f9;</span><br><span class="line">  --table-border-color: #c9d0d5;</span><br><span class="line">  --td-color: #000;</span><br><span class="line">  --td-background: #f2f5f9;</span><br><span class="line">  --td-border-color: #c9d0d5;</span><br><span class="line">  --thead-color: #000;</span><br><span class="line">  --thead-background: #acb4b7;</span><br><span class="line">  --thead-border-color: #c9d0d5;</span><br><span class="line"></span><br><span class="line">  --light-switch-color: #fff;</span><br><span class="line">  --light-switch-background: #212429;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="마크다운-파일-생성"><a href="#마크다운-파일-생성" class="headerlink" title="마크다운 파일 생성"></a>마크다운 파일 생성</h3><p>위의 configuration 파일에서 esdoc 문서에 코드 외의 추가 마크다운 문서를 작성하기 위해서,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">     &quot;name&quot;: &quot;esdoc-standard-plugin&quot;,</span><br><span class="line">     &quot;option&quot;: &#123;</span><br><span class="line">       &quot;coverage&quot;: &#123;</span><br><span class="line">         &quot;enable&quot;: true</span><br><span class="line">       &#125;,</span><br><span class="line">       &quot;accessor&quot;: &#123;</span><br><span class="line">         &quot;access&quot;: [&quot;public&quot;],</span><br><span class="line">         &quot;autoPrivate&quot;: true</span><br><span class="line">       &#125;,</span><br><span class="line">       &quot;manual&quot;: &#123;</span><br><span class="line">         &quot;index&quot;: &quot;./manual/index.md&quot;,</span><br><span class="line">         &quot;globalIndex&quot;: true,</span><br><span class="line">         &quot;asset&quot;: &quot;./manual/assets&quot;,</span><br><span class="line">         &quot;files&quot;: [</span><br><span class="line">           &quot;./manual/installation.md&quot;</span><br><span class="line">           &quot;./manual/usage.md&quot;</span><br><span class="line">         ]</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><p>와 같이 수정했기 때문에, 현재는 존재하지 않는 custom-styels.css 파일을 만들어줘야 합니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> project directory 로 이동하세요</span><br><span class="line">cd your-project/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> manual 폴더와 manual/assets 폴더를 만듭니다</span><br><span class="line">mkdir manual</span><br><span class="line">mkdir manual/assets</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> manual 폴더로 이동합니다</span><br><span class="line">cd manual</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 위에서 기입한 마크다운 문서를 만듭니다.</span><br><span class="line">touch index.md installation.md usage.md</span><br></pre></td></tr></table></figure><h3 id="최종확인"><a href="#최종확인" class="headerlink" title="최종확인"></a>최종확인</h3><p>커스터마이징이 제대로 되었을까요? 확인해 봅시다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> project directory 로 이동하세요</span><br><span class="line">cd your-project/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> run ESDoc</span><br><span class="line">./node_modules/.bin/esdoc</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 문서를 확인해 보세요.</span><br><span class="line">open ./docs/index.html</span><br></pre></td></tr></table></figure><p>저는 다음과 같이 완성했습니다.</p><img src="/2019/01/15/how-to-use-esdoc/esdoc_customizing.jpg">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;esdoc은 JavaScript 용 문서 제네레이터, 특히 es6에 특화된 documentation generator입니다. 비슷하게 JavaScript의 주석을 문서로 만들어주는 것이로, JSdoc 도 있습니다.&lt;/p&gt;
&lt;p&gt;현재 진행하고 있는
      
    
    </summary>
    
      <category term="Frontend" scheme="https://devist.github.io/categories/frontend/"/>
    
      <category term="Etc" scheme="https://devist.github.io/categories/frontend/etc/"/>
    
    
      <category term="javascript" scheme="https://devist.github.io/tags/javascript/"/>
    
      <category term="jsdoc" scheme="https://devist.github.io/tags/jsdoc/"/>
    
      <category term="esdoc" scheme="https://devist.github.io/tags/esdoc/"/>
    
  </entry>
  
  <entry>
    <title>독서기록) 그대 눈동자에 건배</title>
    <link href="https://devist.github.io/2019/01/14/review-books-2/"/>
    <id>https://devist.github.io/2019/01/14/review-books-2/</id>
    <published>2019-01-14T13:50:54.000Z</published>
    <updated>2019-01-14T13:55:07.323Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://t1.daumcdn.net/cfile/tistory/99D854415AC0E1E93A" alt="그대 눈동자에 건배 - 히가시노 게이고"></p><p>히가시노 게이고는 ‘용의자 x의 헌신’ 등 추리 소설로 유명하지만, 내가 처음 접했고 지금도 유일하게 읽었던 책은 ‘나미야 백화점의 기적’ 이다. 이후 만난 책이 이 책, ‘그대 눈동자에 건배’ 다. (스포 있음)</p><h3 id="새해-첫날의-결심"><a href="#새해-첫날의-결심" class="headerlink" title="새해 첫날의 결심"></a>새해 첫날의 결심</h3><p>열심히 살아왔던 부부가 새해를 맞아 신사에 가는 길에 쓰러진 군수를 발견한다. 놀란 그들은 경찰에 신고를 하게 되고 사건의 실마리는 하나씩 풀려가는데. 결론은 군수와 교육장의 어이 없는 사랑 싸움이었다. 부부는 이 사건의 휘말리며 신사를 다녀온 뒤에 도소주로 자살하려던 계획을 접고 다시 열심히 살아가보자고 다짐한다. 아내가 있는 군수와 교육장의 도덕적 해이, 사건을 대충 끝내버리려는 경찰서장, 신을 모신다는 신사 구지의 물욕 등을 보며 생각이 바뀌었기 때문이다. 양심도 없고 책임감도 없는 이들이 살아가는데, 우리도 살아가야 하지 않겠는가? 이들은 앞으로 조금 더 가볍게 살아가리라.</p><h3 id="10년-만의-밸런타인데이"><a href="#10년-만의-밸런타인데이" class="headerlink" title="10년 만의 밸런타인데이"></a>10년 만의 밸런타인데이</h3><p>이 단편은 히가시노 게이고의 다른 추리 소설들이 얼마나 재밌는지 알 수 있게 하는 작품 같다. </p><p>유명 작가가 된 미네기시는 밸런타인데이에 오래 전 사겼던 쓰다 치리코를 레스토랑에서 만나게 된다. 즐거운 대화들과 설렘도 잠시, 미네기시의 표정은 시간이 지날수록 점점 더 굳어만 간다. 미네기시의 소설은, 쓰다 치리코의 친구이자 미네기시가 쓰다 치리코를 만나기 전에 사귀었던 에미의 소설을 배꼈던 것이다. 에미를 살해한 것은 덤. 쓰다 치리코의 직업은 경찰이었고, 쓰다 치리코는 미네기시를 체포한다.</p><p>진실이 드러난 후 범행이 발각되어 절망하면서도 한편으로는 후련해하는 미네기시. 그를 보면서, 나 또한 거짓말을 하고는 후회했던 기억들을 떠올려본다. 반대로 쓰다 치리코는 어떤 기분일까. 짐작이 가질 않는다.</p><h3 id="오늘-밤은-나-홀로-히나마쓰리"><a href="#오늘-밤은-나-홀로-히나마쓰리" class="headerlink" title="오늘 밤은 나 홀로 히나마쓰리"></a>오늘 밤은 나 홀로 히나마쓰리</h3><p>결혼 예정이며 시집살이를 하게 될 딸을 걱정하는 아빠. 엄마 딸이니 걱정말라는 딸의 말을 이해하지 못한다. 이후 히나마쓰리의 진실을 파악해가며, 힘든 시집살이 속에서도 아내가 항상 웃으며 지낼 수 있었던 비결을 알게 되고, 이후 딸의 걱정을 접게 된다는 이야기. 우리는 서로가 가까우며 잘 안다고 생각하지만, 가끔식 너무 모르는 상대방의 모습에 놀라거나 당혹스러운 순간이 있다. 그런 것을 표현한 소설인 것 같다.</p><h3 id="그대-눈동자에-건배"><a href="#그대-눈동자에-건배" class="headerlink" title="그대 눈동자에 건배"></a>그대 눈동자에 건배</h3><p>잠복근무 형사. 그는 범죄자의 얼굴을 수도 없이 외운 후 경매장 같은 곳에 잠복했다가 범인을 발견하면 체포한다. 우연히 사귀게 된 여자친구의 생얼을 보고 범인임을 알아챈 후, 결국 여자친구를 감옥에 넣어버린다. 책의 제목이기도 한 핵심 소설이었으나 내게는 가장 재미가 덜 했던 것 같다.</p><h3 id="렌털-베이비"><a href="#렌털-베이비" class="headerlink" title="렌털 베이비"></a>렌털 베이비</h3><p>호기심이 많아서, 많은 경험을 해본 여자가 휴가를 내고 로봇 아기 키우기에 도전한다. 그동안 결혼해서 아기를 낳는 것에 부정적이었으나, 렌털한 로봇 베이비를 키우며 생각이 긍정적으로 변화한다. 렌털 베이비를  반환한 후 그녀와 그녀 친구와의 대화.</p><p>“애기 키워 볼까봐.”</p><p>“늦은 거 아냐? 너 60살이잖아”</p><p>“늦기는 뭘. 아직 인생의 절반도 안 살았는걸?”</p><p>소름. 렌털 베이비가 개인적으로 가장 기억에 남는다. 60살이 인생의 절반이 되는 시절인데, 나는 몇 살까지 일할 수 있을까? 장래가 걱정되기 시작한다.</p><p>이 외에도 고장 난 시계, 사파이어의 기적, 크리스마스 미스터리, 수정 염주 모두 재밌었다.</p><p>작가에 구애 받지 않고 독서하는 편인데, 나미야 백화점의 기적도 그렇고, 그대 눈동자의 건배도 그렇고, 점점 작가의 다른 소설에도 흥미가 생기기 시작한다. 언젠가 용의자 x의 헌신도 한 번 읽어봐야겠다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99D854415AC0E1E93A&quot; alt=&quot;그대 눈동자에 건배 - 히가시노 게이고&quot;&gt;&lt;/p&gt;
&lt;p&gt;히가시노 게이고는 ‘용의자 x의 헌신’ 등 추리 소설로 유명하
      
    
    </summary>
    
      <category term="Review" scheme="https://devist.github.io/categories/review/"/>
    
      <category term="Books" scheme="https://devist.github.io/categories/review/books/"/>
    
    
  </entry>
  
  <entry>
    <title>Firebase Cloud Messaging</title>
    <link href="https://devist.github.io/2019/01/14/Firebase-Cloud-Messaging/"/>
    <id>https://devist.github.io/2019/01/14/Firebase-Cloud-Messaging/</id>
    <published>2019-01-13T17:28:27.000Z</published>
    <updated>2019-01-13T17:28:48.436Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="Firebase" scheme="https://devist.github.io/categories/firebase/"/>
    
    
  </entry>
  
  <entry>
    <title>Jenkins with GCP_설치</title>
    <link href="https://devist.github.io/2019/01/14/jenkins-with-gcp/"/>
    <id>https://devist.github.io/2019/01/14/jenkins-with-gcp/</id>
    <published>2019-01-13T17:21:12.000Z</published>
    <updated>2019-01-14T12:53:51.213Z</updated>
    
    <content type="html"><![CDATA[<p>Google cloud Platform에 무료 VM(리눅스 Centos7)을 할당 받아서 Gitlab, Jenkins, Webpack, Mocha를 연동하여 CI/CD를 해보려고 한다. 전문 분야는 아니지만 한 번 직접 구축해보는 것도 좋은 경험이 될 것 같다.</p><p>오늘의 목표는 Google Cloud Platform(이하 GCP)에 VM 인스턴스(Centos7)를 생성하고, Jenkins를 설치하여 실행해 보는 것이다.</p><ul><li>Step1. GCP에 Centos7 VM 인스턴스 생성</li><li>Step2. JDK 설치</li><li>Step3. Maven 설치</li><li>Step4. Jenkins 설치</li></ul><h3 id="What-is-Jenkins"><a href="#What-is-Jenkins" class="headerlink" title="What is Jenkins?"></a>What is Jenkins?</h3><p>Jenkins는 소프트웨어를 작성, 테스트 및 배포하거나 배포하는 것과 관련된 모든 종류의 작업을 자동화하는 데 사용할 수 있는 오픈 소스 자동화 서버이다. Jenkins는 기본 시스템 패키지 인 Docker에 설치하거나 Java Runtime Environment (JRE)가 설치된 모든 시스템에서 독립 실행 형으로 실행할 수도 있다. - <a href="https://jenkins.io/doc/" target="_blank" rel="noopener">Jenkins User Documentation</a></p><p><br>   </p><h1 id="Step-1-GCP-에-Centos7-VM-인스턴스-생성"><a href="#Step-1-GCP-에-Centos7-VM-인스턴스-생성" class="headerlink" title="Step 1. GCP 에 Centos7 VM 인스턴스 생성"></a>Step 1. GCP 에 Centos7 VM 인스턴스 생성</h1><h3 id="a-GCP-프로젝트-생성"><a href="#a-GCP-프로젝트-생성" class="headerlink" title="a. GCP 프로젝트 생성"></a>a. GCP 프로젝트 생성</h3><p> <a href="https://console.cloud.google.com/" target="_blank" rel="noopener">https://console.cloud.google.com</a> 에 접속하여 로그인 후, 상단의 [프로젝트 선택]을 클릭하고 [새 프로젝트] 를 클릭한다.<img src="https://t1.daumcdn.net/cfile/tistory/99C752485C398D1103" alt=""></p><p>프로젝트 이름 입력 후, ‘’만들기’’를 클릭하여 프로젝트 생성을 완료한다.<img src="https://t1.daumcdn.net/cfile/tistory/9967864D5C398D1E0F" alt=""></p><h3 id="b-VM-인스턴스-생성"><a href="#b-VM-인스턴스-생성" class="headerlink" title="b. VM 인스턴스 생성"></a>b. VM 인스턴스 생성</h3><p>왼쪽 상단 메뉴 클릭 &gt; Computer Engine &gt; VM 인스턴스를 클릭한 후, <strong>[ +인스턴스 만들기]</strong> 버튼을 클릭한다.<img src="https://t1.daumcdn.net/cfile/tistory/99F8C14A5C398D2D0E" alt=""></p><p>인스턴스 만들기 페이지에서, 머신 유형을 초소형(무료임)을 선택하고, 부팅디스크는 CentOS7을 선택한다. 나머지는 다 기본 설정으로 건들지 않고, 하단의 <strong>만들기</strong> 버튼을 클릭한다.<img src="https://t1.daumcdn.net/cfile/tistory/99E159485C398D3F0F" alt=""></p><p>다음과 같이 인스턴스가 만들어진다.<img src="https://t1.daumcdn.net/cfile/tistory/99F7DF4A5C398D4902" alt=""></p><p><br></p><p><br> </p><h1 id="Step2-사전-준비-JDK-설치"><a href="#Step2-사전-준비-JDK-설치" class="headerlink" title="Step2. 사전 준비_JDK 설치"></a>Step2. 사전 준비_JDK 설치</h1><p>젠킨스를 사용하려면 jdk와 메이븐이 CentOs에 먼저 설치되어 있어야 한다고 한다. 먼저 CentOS 인스턴스에 JDK를 설치한다. 다음과 같이 SSH 연결에서 브라우저 창에서 열기를 클릭하여 Step1에서 생성한 인스턴스에 SSH로 접속하기 위한 클라우드 터미널을 연다. <img src="https://t1.daumcdn.net/cfile/tistory/9907D14E5C398DAD0C" alt=""></p><p><img src="https://t1.daumcdn.net/cfile/tistory/9985C64E5C398DAD0F" alt=""></p><h3 id="a-JDK-설치"><a href="#a-JDK-설치" class="headerlink" title="a. JDK 설치"></a>a. JDK 설치</h3><p>쉘에 아래 명령어를 입력하여 openJDK 1.8 버전을 설치한다.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install java-<span class="number">1.8</span>.<span class="number">0</span>-openjdk-devel.x86_64</span><br></pre></td></tr></table></figure><p>아래 명령어를 입력하여 설치 결과를 확인한다.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ javac -version</span><br><span class="line">javac <span class="number">1.8</span>.<span class="number">0</span>_191</span><br></pre></td></tr></table></figure><h3 id="b-JDK-환경-변수-설정"><a href="#b-JDK-환경-변수-설정" class="headerlink" title="b. JDK 환경 변수 설정"></a>b. JDK 환경 변수 설정</h3><p><strong>JAVA_HOME 확인</strong></p><p>처음엔 JAVA_HOME에 아무런 값이 없다.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ehco <span class="variable">$JAVA_HOME</span></span><br><span class="line"></span><br><span class="line">$</span><br></pre></td></tr></table></figure><p><strong>JAVA 위치 확인</strong></p><p>환경변수를 설정하기 위해 javac의 위치를 확인한다. which 명령어로 javac 명령어의 위치를 찾는다. 이 때 찾은 위치는 심볼릭 링크이기 때문에, 원본 파일 위치를 찾기 위해서 readlink 명령어를 사용한다. 여기서 /bin/javac 이전까지의 경로가 JAVA_HOME이 된다.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ which javac</span><br><span class="line">/usr/bin/javac</span><br><span class="line">$ readlink -f /usr/bin/javac</span><br><span class="line">/usr/lib/jvm/java-<span class="number">1.8</span>.<span class="number">0</span>-openjdk-<span class="number">1.8</span>.<span class="number">0.191</span>.b12-<span class="number">1</span>.el7_6.x86_64/bin/javac</span><br><span class="line">$</span><br></pre></td></tr></table></figure><p><strong>JAVA_HOME 설정</strong></p><p>환경변수를 설정하는 profile 파일을 vi 편집기로 연다.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/profile</span><br></pre></td></tr></table></figure><p>파일의 가장 밑에 아래 내용 추가한 후 저장한다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.191.b12-1.el7_6.x86_64</span><br></pre></td></tr></table></figure><p>source 명령어를 이용해서 수정한 파일을 적용한다.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ source /etc/profile</span><br></pre></td></tr></table></figure><p>마지막으로, 제대로 적용되었는지 확인한다.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ echo <span class="variable">$JAVA_HOME</span></span><br><span class="line">/usr/lib/jvm/java-<span class="number">1.8</span>.<span class="number">0</span>-openjdk-<span class="number">1.8</span>.<span class="number">0.191</span>.b12-<span class="number">1</span>.el7_6.x86_64</span><br><span class="line">$ <span class="variable">$JAVA_HOME</span>/bin/javac -version</span><br><span class="line">javac <span class="number">1.8</span>.<span class="number">0</span>_191</span><br><span class="line">$</span><br></pre></td></tr></table></figure><p> <br></p><p><br></p><h1 id="Step3-사전-준비-maven-메이븐-설치"><a href="#Step3-사전-준비-maven-메이븐-설치" class="headerlink" title="Step3. 사전 준비_maven(메이븐) 설치"></a>Step3. 사전 준비_maven(메이븐) 설치</h1><p>이제 Maven이라는 빌드 도구를 설치한다.</p><p>사전준비로, 먼저 wget (웹 서버로부터 콘텐츠를 가져오는 프로그램, 명령어)을 설치한다.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install wget -y</span><br></pre></td></tr></table></figure><p><strong>메이븐 설치</strong></p><p>본격적으로 메이븐을 설치한다. 루트 경로에 tools라는 폴더를 만들고, 이 폴더로 이동한다.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mkdir /tools</span><br><span class="line">$ cd /tools</span><br></pre></td></tr></table></figure><p>이동한 경로에서, maven을 다운받고 설치한다. ln 명령어로 심볼릭 링크를 걸었는데, 이는 나중에 메이븐 버전이 변경되었을 때 대응할 수 있도록 하기 위함이다.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo wget http://www-eu.apache.org/dist/maven/maven-<span class="number">3</span>/<span class="number">3.5</span>.<span class="number">4</span>/binaries/apache-maven-<span class="number">3.5</span>.<span class="number">4</span>-bin.tar.gz</span><br><span class="line">$ sudo tar xzf apache-maven-<span class="number">3.5</span>.<span class="number">4</span>-bin.tar.gz</span><br><span class="line">$ sudo ln -s apache-maven-<span class="number">3.5</span>.<span class="number">4</span>  maven</span><br></pre></td></tr></table></figure><p><strong>메이븐 환경설정 하기</strong></p><p>Maven 환경변수 설정 스크립트 파일을 생성한다.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/profile.d/maven.sh</span><br></pre></td></tr></table></figure><p>파일 내의 다음 내용을 작성한 후 저장한다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export MAVEN_HOME=/tools/maven</span><br><span class="line">export PATH=$&#123;MAVEN_HOME&#125;/bin:$&#123;PATH&#125;</span><br></pre></td></tr></table></figure><p>작성 내용을 바로 적용한다.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ source /etc/profile.d/maven.sh</span><br></pre></td></tr></table></figure><p>적용이 제대로 되었는지 확인한다.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mvn -version</span><br></pre></td></tr></table></figure><p>  <br></p><p><br></p><h1 id="Step4-Jenkins-젠킨스-설치"><a href="#Step4-Jenkins-젠킨스-설치" class="headerlink" title="Step4. Jenkins(젠킨스) 설치"></a>Step4. Jenkins(젠킨스) 설치</h1><h3 id="a-GCP-구글-클라우드-플랫폼-방화벽-설정"><a href="#a-GCP-구글-클라우드-플랫폼-방화벽-설정" class="headerlink" title="a. GCP(구글 클라우드 플랫폼) 방화벽 설정"></a>a. GCP(구글 클라우드 플랫폼) 방화벽 설정</h3><p>JDK, Mave을 설치했으니 이제 드디어 jenkins를 설치할 차례다.</p><p>그러나 먼저 해줘야할 일이 있다. VM instance 방화벽을 설정하는 것이다. 구글 클라우드 플랫폼은 VM 외부에 방화벽이 있으며, vm 내부의 os가 아닌 vm 외부에서 방화벽 설정을 제대로 해줘야 원하는 포트를 사용할 수 있다. 클라이언트가 브라우저로 jenkins를 접속할 수 있도록 하기 위해, 먼저 방화벽을 설정하도록 한다.</p><p>아래처럼 나의 인스턴스 목록에서, 사용하는 인스턴스의 [네트워크 세부정보 보기] 를 클릭한다.<img src="https://t1.daumcdn.net/cfile/tistory/995E7B4C5C398E340E" alt=""></p><p>이후 [방화벽 규칙] -&gt; [방화벽 규칙 만들기] 를 클릭한다.<img src="https://t1.daumcdn.net/cfile/tistory/99435E4C5C398E3515" alt=""></p><p>다음과 같이 설정하여 8080 포트를 사용할 수 있도록 한다.<img src="https://t1.daumcdn.net/cfile/tistory/9992CE4C5C398E3613" alt=""></p><p>방화벽 규칙이 제대로 만들어졌나 확인한다.<img src="https://t1.daumcdn.net/cfile/tistory/99691D4C5C398E3714" alt=""></p><h3 id=""><a href="#" class="headerlink" title=" "></a> </h3><h3 id="b-젠킨스-설치"><a href="#b-젠킨스-설치" class="headerlink" title="b. 젠킨스 설치"></a>b. 젠킨스 설치</h3><p>방화벽 설정이 마무리 되었으니 이제 설치를 해 볼 차례다. 먼저 Jenkins 설치를 위한 yum 레파지토리를 설정한다.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo</span><br><span class="line">$ sudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key</span><br></pre></td></tr></table></figure><p>젠킨스를 설치한다.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install jenkins</span><br></pre></td></tr></table></figure><p>포트 설정을 위해 jenkins 파일을 연다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo vi /etc/sysconfig/jenkins</span><br></pre></td></tr></table></figure><p>포트를 변경한다. 나 같은 경우는 디폴트 포트인 8080을 이용한다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JENKINS_PORT="8080"</span><br></pre></td></tr></table></figure><p>아까 GCP의 VM 외부에서 방화벽 설정을 했으나, 혹시 모르니 내부에서 한번 더 방화벽을 설정해준다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo firewall-cmd --permanent --zone=public --add-port=9090/tcp</span><br><span class="line"><span class="meta">$</span> sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure><h3 id="c-젠킨스-명령어"><a href="#c-젠킨스-명령어" class="headerlink" title="c. 젠킨스 명령어"></a>c. 젠킨스 명령어</h3><p>Jenkins 시작</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service jenkins start</span><br></pre></td></tr></table></figure><p>Jenkins 종료</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service jenkins stop</span><br></pre></td></tr></table></figure><p>Jenkins 재시작</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service jenkins restart</span><br></pre></td></tr></table></figure><p>CentOs에서 젠킨스를 항상 실행하게 설정</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable jenkins</span><br></pre></td></tr></table></figure><h3 id="d-브라우저로-젠킨스에-접속하기"><a href="#d-브라우저로-젠킨스에-접속하기" class="headerlink" title="d. 브라우저로 젠킨스에 접속하기"></a>d. 브라우저로 젠킨스에 접속하기</h3><p>먼저 service jenkins start로 젠킨스를 동작시키고, 웹 브라우저로 접속해본다.</p><p>접속 주소는 <strong>http://외부 IP:8080</strong> 이다.<img src="https://t1.daumcdn.net/cfile/tistory/9987E54F5C398E960F" alt=""></p><p>다음과 같이 최초 화면이 뜬다면 성공.<img src="https://t1.daumcdn.net/cfile/tistory/9964874F5C398E9833" alt=""></p><p>Administrator password에는 다음의 명령어로 확인되는 코드를 입력해준다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cat /var/lib/jenkins/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure><p>코드 입력 후 continue 를 누르면 다음의 화면이 나오는데, 젠킨스는 다양한 기능등릉 플러그인으로 제공하지만, 일단 여기서는 install suggested plugins로 설치를 진행하고 마무리한다.<img src="https://t1.daumcdn.net/cfile/tistory/993357435C398EB314" alt=""></p><p>설치 완료!<img src="https://t1.daumcdn.net/cfile/tistory/992599445C398EC40D" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Google cloud Platform에 무료 VM(리눅스 Centos7)을 할당 받아서 Gitlab, Jenkins, Webpack, Mocha를 연동하여 CI/CD를 해보려고 한다. 전문 분야는 아니지만 한 번 직접 구축해보는 것도 좋은 경험
      
    
    </summary>
    
      <category term="Cloud" scheme="https://devist.github.io/categories/cloud/"/>
    
      <category term="CI/CD" scheme="https://devist.github.io/categories/cloud/ci-cd/"/>
    
    
      <category term="jenkins" scheme="https://devist.github.io/tags/jenkins/"/>
    
      <category term="gcp" scheme="https://devist.github.io/tags/gcp/"/>
    
      <category term="ci" scheme="https://devist.github.io/tags/ci/"/>
    
      <category term="cd" scheme="https://devist.github.io/tags/cd/"/>
    
  </entry>
  
  <entry>
    <title>2018년 회고하기</title>
    <link href="https://devist.github.io/2019/01/14/Retrospect-for-2018/"/>
    <id>https://devist.github.io/2019/01/14/Retrospect-for-2018/</id>
    <published>2019-01-13T17:10:03.000Z</published>
    <updated>2019-01-14T10:02:46.683Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2018년"><a href="#2018년" class="headerlink" title="2018년"></a>2018년</h2><p>2018년은 업무적으로도, 개인의 삶을 돌아보아도 아쉬움이 남는, 색깔 없는 한 해였다. 반성이 필요한 한 해였다.</p><p>업무적으로는, 물론 매일 조금씩 나아지긴 했다. ES6 를 학습하고, Vue.js 프레임워크를 사용할 수 있게 되고, Kotlin으로 안드로이드 앱 개발이 가능해졌다. 그러나 입사 후 점점 기술 스펙트럼은 넓어지지만, 깊이를 가질 수 없게 되어가고 있다. 근 2년 동안 운영-&gt;안드로이드 앱개발-&gt;하이브리드앱 개발-&gt;PM-&gt;마케팅-&gt;일부 풀스택 웹 개발 등 정말 다양한 일을 해왔다. 이렇게 물 흐르듯, 스쳐가며 배우는 것들이 과연 내게 도움이 될까. 전문성을 키우지 못하고 기술적으로 정체 또는 퇴보하고 있다는 아쉬움이 드는 한편, 평생 직장인을 할 자신도 없는 나이므로, 오히려 추후 창업할 때에는 이런 경험이 도움이 되지 않을까 애써 위로해본다.</p><p>삶적으로는, 너무나도 게으르고 무기력했다. 배고플 때 먹고, 운동은 거의 하지 않는 상태로 30대로 진입까지 해버리니 예전만큼 팔팔하지 못하다는게 내 스스로도 느껴진다. 또한 여가 시간을 투자해서 했던 일들도 뜻대로 되지 않았으며, 열심히 투자한 시간만큼 하고 싶었던 다른 일들(학습, 운동 등)은 아예 뒷전이었던 것 같다. 연고 없는 타지역에 와서, 더 적극적으로 주변을 챙겨야 했음에도 불구하고, 먼저 연락하여 챙기기는 커녕 오는 연락에도 귀찮아하며 말도 안되는 핑계로 거절하는 일이 다반사였다.</p><h4 id="망한-일본-오사카-여행"><a href="#망한-일본-오사카-여행" class="headerlink" title="망한 일본 오사카 여행"></a>망한 일본 오사카 여행</h4><p>2박3일로 잡아두었던 일본 오사카 여행. </p><p>1차적으로, 일이 생겨서 1박 2일로 변경하며 금전적 손실이 발생했다. 2차는, 이번 년도 제주도를 자주 왕래하다보니, 비행기 탑승가능시간을 제주도 갈때처럼 몇 십 분 전에도 가능할거라고 착각하여 비행기를 놓쳤다. 2차로 금전적 손실이 발생했다.</p><p>갈까말까 고민하다가 결국 다른 비행기를 끊어서 오사카로 가 친구를 만났지만, 이미 늦은 저녁이라 저녁만 먹고 끝났다. 다음날에는 교토 기온거리를 조금 관광한후 다시 한국으로 돌아오는 비행기를 타러가야했다.</p><p>3차로, 예상치 못한 일이 발생했다. 왕복권은 탑승이 취소되면, 돌아오는 항공편도 취소된다는데 몰랐다. 나는 항공권이 있는줄 알았는데, 없던 것이다! 급하게 한국 가는 항공편 예약하느라 진땀을 뺐다. 거의 당일치기와 다름없었던, 돈을 허공에 뿌리고 온 여행이라, 크게 기억에 남는다..</p><h4 id="이사"><a href="#이사" class="headerlink" title="이사"></a>이사</h4><p>월세에서 전세로 옮겼다. 둘 다 좁은 공간이지만, 이번에는 복층이라 조금 더 답답하지 않게 살 수 있게 되었다. 전세로 전환하며 매달 고정지출비용도 많이 아낄 수 있게 되었다. (인테리어 하느라 돈 더 쓴 거 같은 기분은 안 비밀)</p><h4 id="결혼-Party"><a href="#결혼-Party" class="headerlink" title="결혼 Party"></a>결혼 Party</h4><p>주변에 결혼하는 사람이 해가 갈 수록 증가하는 기분이다. 많을 때는 정말 한 달 중 세 번의 주말을 결혼식장에서 보낸 것 같다. 좋아하는 사람들이 결혼하여 신혼 생활을 하는 것은 물론 기분 좋고 행복한 일이다. 그러나 매 달 최소 1회 이상 결혼식을 방문하는 건, 마냥 생각없이 기뻐할 수 없는 일이었다.</p><p>그럼에도 축하하며, 정말로 방문했던 모든 부부와 관련 지인들이 앞으로 더 행복하길 바래본다.</p><h4 id="방송-출연"><a href="#방송-출연" class="headerlink" title="방송 출연"></a>방송 출연</h4><p>우연한 계기로 그룹 방송에 출연했다. 특별한 사람이 아님에도 불구하고 나를 추천해준 회사 분들께 감사하다. 물론 촬영 시기가 좋지 않아서 원하는 모습을 못 보여드린 건 아쉽고, 또한 거의 삭발 수준이었을 때 촬영하게 된 것도 아쉽다. 그룹 방송 외에도, AI 어쩌고를 주제로 한 MBC 방송에도 내 모습이 나왔다. 하나의 점같이 나왔지만, 나온 건 나온거니까.. 하필 이사하느라 스마트폰으로 용달 부르고 있는 모습이 찍혀서 당황스러웠다..ㅋ</p><img src="/2019/01/14/Retrospect-for-2018/mbc.png" title="a"><p>인생 살면서 한 번 쯤 지나가는 행인 1으로라도, TV 같은데 출연해보는게 하나의 버킷리스트였는데, 2018년에 이룬 것 같다.</p><h4 id="Nexters"><a href="#Nexters" class="headerlink" title="Nexters"></a>Nexters</h4><p>회사 선배의 소개로 Nexters라는 대외활동에 지원하게 되었고, 불쑥 합격했다. IT에 관심 있는 대학생들과, IT 현업에서 일하고 있는 직장인들이 모여 방학기간동안 함께 팀을 이뤄 프로젝트를 진행하는 대외활동이다. 대학생들과 같이 협업해볼 수 있어서 좋았고, 실력 좋은 현직 직장인들과 교류할 수 있어서 좋았다. 아쉽게도 이번 겨울에는 개인 사정으로 참여하지 못했지만, 19년 여름방학에는 꼭 참여해서 수료하겠다.</p><h2 id="2019년-목표"><a href="#2019년-목표" class="headerlink" title="2019년 목표"></a>2019년 목표</h2><p>새해에는 목표와 목적을 갖고, 발전적인 삶을 살고 싶다. 더이상 늦출 수 없는 것들을 올 한 해 이뤄내고 싶다.</p><ul><li>기술적으로 발전하기<ul><li>꾸준한 블로깅</li><li>회사 프로세스 기록</li><li>안드로이드<ul><li>kotlin, Rx 를 활용한 개인앱 2개 출시</li></ul></li><li>회사 프로젝트에 React 적용</li><li>알고리즘 100문제 풀기</li></ul></li><li>운동 한가지 시작하기</li><li>자격증 1개 취득(이번에야말로…)</li><li>금연하기(이번에야말로..)</li><li>운전 면허 취득하기(이번에야말로…)</li><li>영어 실력 키우기<ul><li>스피킹 맥스 완강하여 장학금 타기</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;2018년&quot;&gt;&lt;a href=&quot;#2018년&quot; class=&quot;headerlink&quot; title=&quot;2018년&quot;&gt;&lt;/a&gt;2018년&lt;/h2&gt;&lt;p&gt;2018년은 업무적으로도, 개인의 삶을 돌아보아도 아쉬움이 남는, 색깔 없는 한 해였다. 반성이 필요한 
      
    
    </summary>
    
      <category term="Log" scheme="https://devist.github.io/categories/log/"/>
    
      <category term="Year" scheme="https://devist.github.io/categories/log/year/"/>
    
    
  </entry>
  
  <entry>
    <title>비욘드 사일러스(Beyond Silence) - 인기는 인기 있어야 할까</title>
    <link href="https://devist.github.io/2019/01/14/review-movies-beyond-silence/"/>
    <id>https://devist.github.io/2019/01/14/review-movies-beyond-silence/</id>
    <published>2019-01-13T16:02:33.000Z</published>
    <updated>2019-01-13T16:07:44.089Z</updated>
    
    <content type="html"><![CDATA[<p><strong>비욘드 사일런스(Beyond Silence)</strong></p><p><img src="https://t1.daumcdn.net/cfile/tistory/2550644057ABFD6821" alt="img"></p><p><img src="https://t1.daumcdn.net/cfile/tistory/2156A54057ABFD6A1D" alt="img"></p><h2 id="줄거리"><a href="#줄거리" class="headerlink" title="줄거리"></a>줄거리</h2><p>그냥 지나치기엔 너무나 따뜻하고 아름다운 작품. 청각장애인 부모 사이에서 태어난 라라는 그들에게는 보물과도 같은 존재다. </p><p>외부세계와 다리가 되어 모든 일을 현명하게 처리하던 귀여운 꼬마 소녀 라라. 그녀는 자라면서 음악에 관심을 기울인다. 그것도 아버지인 마틴이 싫어하는 “클라리넷” 연주자가 되기를 꿈꾼다. </p><p>이 클라리넷 연주는 마틴의 누이가 즐기던 것이었다. 태어날 때부터 청각장애자였던 마틴은 누이의 연주를 보고 경탄하는 식구들과 손님들에 의해 심한 콤플렉스를 느낄 수밖에 없었다. </p><p>성인이 된 라라는 어머니마저 죽게 되자 아버지의 심한 간섭을 견디지 못하고 베를린에서 음악 수업을 하기로 결심한다. “침묵을 넘어서”라고 번역될 이 영화의 제목은 모든 것을 말해준다. </p><p>아버지와 딸이 침묵을 넘어 서로 이해할 수 있을까.</p><p>더 나아가 관객들은 소리없는 청각장애자들의 세계를 이해할 수 있을까. </p><p>결말 부분이 다소 상투적이긴 하지만 적잖은 질문과 고민을 전해줄 만한 아름다운 드라마다.</p><h2 id="인기는-인기-있어야-할까"><a href="#인기는-인기-있어야-할까" class="headerlink" title="인기는 인기 있어야 할까"></a>인기는 인기 있어야 할까</h2><p>인기 있고 싶어 하는 사람은 왜 그런 걸까. 만약 내가 인기 있고 싶었다면? </p><p>이유는, 즐겁고 싶고, 행복하고 싶어서가 아닐까 생각한다. </p><p>소크라테스식 사고방식으로 생각해보자.</p><p>인기 있음은 행복하다. 하지만, 인기 없어도 행복한 사람이 존재하지 않을까? 인기 있어도 행복하지 않은 사람은 없는 걸까?</p><p>두 가지 물음 모두 존재할 거라는 생각이 든다. 시작하자마자 오류가 존재한다.</p><p>영화 ‘비욘드 사일런스’의 주인공 라라는 소리를 듣지 못하는 아버지와 잦은 충돌을 일으킨다.</p><p>꿈을 위해 가족을 떠나 고모와 지냈다. 아버지는 ‘자신의 꿈만 생각하고 가족을 떠나는 건 이기심이다’라고 한다.</p><p>하지만 라라는 그런 비난을 극복하고, 극적으로 아버지의 이해를 받아낸다.</p><p>이것은 라라가 자신만의 생각, 신념이 있었기 때문에 휩쓸리지 않고 자신의 길을 갔기 때문이라고 생각한다.</p><p>자신이 잘못되었다는 비난에 그대로 포기하지 않는 것도 이 때문에 가능했던 것이리라.</p><p>여기서 ‘영화와 철학’ 시간에 배운 인기 없는 사람들에 대해서도 생각해 볼 수 있지 않을까.</p><p>그녀는 비록 또래 친구들에게 인기는 없을지라도, 자신의 꿈을 실천하는 중이므로 행복할 것 같다.</p><p>‘인기가 없어도 행복하다’라는 사람이 존재하는 것이다.</p><p>고모 클라레스를 생각해보면, 그녀의 아버지에게 사랑받고, 그녀의 오빠에게는 질투를 받으며,</p><p>주인공 라라에게는 동경의 대상이 된다. 인기 있는 것이다. 하지만 영화에서 그녀는 행복하지 않다. </p><p>‘인기는 있지만 행복하지 않다’는 사람이 존재하는 것이다.</p><p>나는 오래 전 철학자인 소크라테스의 도움으로 쉽게 내 생각의 오류를 찾아낼 수 있었고,</p><p>그 예를 영화에서 찾아냈다. 그러면, 인기라는 건 또 무엇인가?</p><p>인기라는 것도 두가지 종류가 있다. 하나는 자신의 확고한 신념, 생각 등이 있기 때문에</p><p>자신감 넘치고, 행동에 거침이 없기 때문에 인기가 있는 것이고,</p><p>또 하나는 세상에 굴복해 남의 비위나 맞춰 주고 순종적이어서 대하기 편하기 때문에 인기 있는 것이다.</p><p>라라가 인기 있다면 그녀의 경우는 전자가 아닐까. 영화에서 결말은 나지 않았지만,</p><p>그녀는 시험에서 좋은 연주를 펼쳤고, 그래서 합격해 유명한 음악인이 되었다면 그녀의 용기와 불굴의 의지 등</p><p>때문에 인기 있을지 모르는 일이기 때문이다. 그리고 이 경우가 더 행복할 것 같다.</p><p>이쯤 되면, 인기라는 것이 무의미해 보인다. 인기라는 것으로 행복해 질 수 있는 것도 아닌 것 같다.</p><p>또한 내가 생각한 두 종류의 인기 중 후자는 진실로 인기 있는 것 같지도 않다.</p><p>전자의 경우도 인기보다는 먼저 라라처럼 자신의 생각, 신념 등을 가지는 게 더 중요해 보인다.</p><p>결국에는 인기 없음, 있음이 문제가 아닌 것이다.</p><p>‘인기라는 게 아무 의미 없는 것이다’ 라는 생각까지 든다.</p><p>라라는 책 ‘젊은 베르테르의 기쁨’의 한 구절처럼 다른 사람의 호의를 얻으려는 욕망에서 자유로웠다.</p><p>항상 자신이 옳다고 믿는대로 행동했고, 확고한 자신의 생각을 가지고 있었다.</p><p>아버지도 결국엔 그녀를 이해해 줬으며, 그녀는 꿈을 향해 나아가고 있기에 행복하다고 생각한다.</p><p>내가 생각하는 해피엔딩의 결말대로라면, 그녀는 결국에 인기까지 얻을 것이다. </p><p>마치 소크라테스처럼.</p><p>그러기에 중요한건 나의 생각을 가꾸고 다듬어서 깊은 확신을 갖는 것이지,</p><p>한낱 인기 따위에 의미를 두어서는 안 될 것 같다.</p><p>그건 부차적인 것이므로.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;비욘드 사일런스(Beyond Silence)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2550644057ABFD6821&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;im
      
    
    </summary>
    
      <category term="Review" scheme="https://devist.github.io/categories/review/"/>
    
      <category term="Movies" scheme="https://devist.github.io/categories/review/movies/"/>
    
    
  </entry>
  
  <entry>
    <title>독서기록) 변신</title>
    <link href="https://devist.github.io/2019/01/14/review-book-1/"/>
    <id>https://devist.github.io/2019/01/14/review-book-1/</id>
    <published>2019-01-13T15:25:05.000Z</published>
    <updated>2019-01-14T14:04:17.966Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://t1.daumcdn.net/cfile/tistory/212F033957AD8FC51D" alt="img"><br>변신. 어린 시절 누구나 한번쯤 꿈꾸어보지 않았을까.<br>어린 시절 하늘을 날아보고 싶어 ‘새’로 변신한 내 모습을 상상해보기도 했고,<br>한창 운동을 하던 시절에는 시합 도중 능력만 ‘사범’님으로 변신해서 금메달을 목에 거는 내 모습을 꿈꾸기도 했다.<br>이 책에는 어떤 ‘변신’이 기다리고 있을까? 책을 반값에 구입한 사실만큼이나 이러한 상상 또한 즐거웠다. </p><blockquote><p>“그레고르는 고개를 돌려 아버지를 쳐다보았다. 지금 저기 서 있는 저런 아버지의 모습은 정말이지 상상조차 해본 적이 없었다. (중략) 그러나 아무리 그렇다고 해도 과연 저 사람이 아버지란 말인가? 예전에 그레고르가 출장을 떠날 때면 늘 지친 모습으로 침대에 파묻혀 누워 있던 바로 그 사람이 맞는 걸까?” -83페이지</p></blockquote><p>그레고르가 벌레로 변신한 후에 그레고르의 아버지, 어머니, 여동생은 새로운 상황에 직면하게 된다.<br>그레고르처럼 극단적인 변신은 아니지만, 그들 또한 나름대로 놀랄만한 변신을 하게 되는 것이다.<br>집 안의 든든한 기둥이던 그레고르가 본인의 역할을 못하게 됨으로서 힘들어 하기도 하지만 결국엔 적응하고 방법을 모색한다.<br>가끔씩은 오히려 더 행복해보이기까지 한다.<br>이런 그들의 ‘변신’을 보면서 기대는 삶, 기댈 곳이 있는 삶, 역할 등에 대해 많은 생각을 해보았다.</p><h3 id="고전-입문자에게-추천할만한-책"><a href="#고전-입문자에게-추천할만한-책" class="headerlink" title="고전 입문자에게 추천할만한 책"></a>고전 입문자에게 추천할만한 책</h3><p>이 소설은 길지 않다. 137페이지 밖에 안 된다. 짧은 시간 안에 읽을 수 있다.</p><p>한 권의 책을 읽고 나면 다른 이들의 리뷰 한 두개 정도는 꼭 읽게 되곤 한다.<br>책을 읽는 것 자체도 재밌지만, 같은 책을 읽고 다른 사람들은 어떻게 느꼈는지,<br>이 책이 가지는 의미가 무엇인지 알아보는 과정 또한 의미있고 재미있다.<br>이번에도 책 뒷편에 나와 있는 ‘옮긴이의 말’을 통해서 이 소설에 대해 더 많이 알게 됐다.</p><p>고전은 읽다 보면 문장이 어렵다거나, 부분적으로 내용이 지루하게 느껴지는 등의 이유로 쉽게 읽히지 않는다.<br>하지만 이 소설은 길지 않고, 인간에서 벌레로 변신한 인간 이야기라는 흥미로운 주제로 이야기를 풀어나가기 때문에<br>단숨에 끝까지 읽을 수 있었다.<br>거기다가 이 책의 적절한 그림과 이야기를 재미있게 읽고 난 후 뒤에 덧붙인 옮긴이의 해설까지 읽고 나면,<br>이 소설에 담긴 의미를 다양한 관점에서 바라볼 수 잇다.<br>그레고르의 아버지 입장에서, 어머니 입장에서, 여동생의 입장에 서서 이 소설을 읽는 것도 재미있다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/212F033957AD8FC51D&quot; alt=&quot;img&quot;&gt;&lt;br&gt;변신. 어린 시절 누구나 한번쯤 꿈꾸어보지 않았을까.&lt;br&gt;어린 시절 하늘을 날아보고 싶어 ‘새’로 
      
    
    </summary>
    
      <category term="Review" scheme="https://devist.github.io/categories/review/"/>
    
      <category term="Books" scheme="https://devist.github.io/categories/review/books/"/>
    
    
  </entry>
  
</feed>
